mrs_uav_managers:

  estimation_manager:

    # loaded state estimator plugins
    state_estimators: [
      "rtk",
      #"gps_garmin",
      #"gps_baro",
    ]

    initial_state_estimator: "rtk" # will be used as the first state estimator
    agl_height_estimator: "" #"garmin_agl" # only slightly filtered height for checking min height (not used in control feedback)

  uav_manager:

    takeoff:

      during_takeoff:
        controller: "MpcController"
        tracker: "LandoffTracker"

      after_takeoff:
        controller: "MpcController" # more robust
        # controller: "Se3Controller" # more precise
        tracker: "MpcTracker"

mrs_uav_trajectory_generation:

  # execution time limiter
  max_time: 0.4 # [s]

  # check and fix the max deviation between the input path and the output trajectory
  # by subsampling the original path with more waypoints
  check_trajectory_deviation:
    max_deviation: 0.30 # [m]

  # allows to neglect waypoints in the original path if the new path
  # does not violate max distance from the original path.
  # This makes for similar but sparser paths, which are easier for the
  # trajectory generator to work with.
  path_straightener:
    enabled: false
    max_deviation: 0.30 # [m]

mrs_uav_trackers:

  mpc_tracker:

    # mrs collision avoidance
    collision_avoidance:

      enabled:           false # disabling this will stop this UAV to react to others, but it will still transmit data to others
      enabled_passively: false # disabling this will stop this uav to even transmit its data to others (only if enabled: false)
      radius: 1.5 # [m]
      correction: 1.5 # [m]

mrs_uav_managers:

  control_manager:

    safety:

      # after not receiving odometry for more than this, the failsafe landing will trigger
      # will be overriden for ACCELERATION+ output mode
      odometry_max_missing_time: 1.0 # [s]