<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="voxel_size" default="0.2"/>
    <arg name="voxels_per_side" default="16" />
    <arg name="truncation_distance" default="0.6" />
    <arg name="method" default="merged"/>
    <arg name="ray_length" default="5" />
    <arg name="min_ray_length" default="0.1" />

    <!-- defines name of the namespace of the drone -->
    <arg name="UAV_NAME" default="$(optenv UAV_NAME uav1)" />

    <arg name="world_frame" default="$(arg UAV_NAME)/world_origin" />

    <group ns="$(arg UAV_NAME)">

        <!--Voxblox Mapping-->
        <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr">
            <remap from="pointcloud" to="/$(arg UAV_NAME)/transformed_points"/>
            <!--remap from="pointcloud" to="/$(arg UAV_NAME)/pcl_filter_rs_front_pitched/points_processed"/-->
            <!--remap from="pointcloud" to="/$(arg UAV_NAME)/velodyne/scan"/-->
            <!--remap from="pointcloud" to="/$(arg UAV_NAME)/os_cloud_nodelet/points"/-->
            <!--remap from="voxblox_node/esdf_map_out" to="esdf_map" /-->
            <!--remap from="voxblox_node/tsdf_map_out" to="tsdf_map" /-->
            <!--remap from="~mesh" to="/voxblox_node/mesh" /-->
            <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
            <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
            <!--param name="truncation_distance" value="$(arg truncation_distance)" /-->
            <param name="method" value="$(arg method)" />
            <param name="max_ray_length_m" value="$(arg ray_length)" />
            <!--param name="min_ray_length_m" value="$(arg min_ray_length)" /-->

            <param name="publish_tsdf_map" value="true" />
            <param name="publish_esdf_map" value="true" />

            <!--param name="mesh_filename" value="/home/joaomendes/workspace1/src/data/gt_house.ply" /-->

            <!--param name="clear_sphere_for_planning" value="true" /-->
            <!--param name="clear_sphere_radius" value="1.2" /-->
            <!--param name="occupied_sphere_radius" value="10" /-->

            <param name="publish_pointclouds" value="true" />
            <param name="publish_tsdf_info" value="true" />
            <!--param name="color_ptcloud_by_weight" value="true" /-->

            <param name="use_freespace_pointcloud" value="false" />
            <!--param name="mesh_min_weight" value="1e-6" /-->
            <!--param name="color_mode" value="color" /-->
            <param name="color_mode" value="normals" />
            <param name="use_tf_transforms" value="true" />
            <param name="update_mesh_every_n_sec" value="1.0" />
            <param name="min_time_between_msgs_sec" value="0.0" />
            <!--param name="pointcloud_queue_size" value="1" /-->
            <param name="use_const_weight" value="false" />

            <!--param name="use_weight_dropoff" value="false" /-->
            <!--param name="use_sparsity_compensation_factor" value="true" /-->
            <!--param name="sparsity_compensation_factor" value="5.0f" /-->

            <param name="verbose" value="true" />
            <param name="world_frame" value="$(arg world_frame)" />
        </node>

    </group>

</launch>

